# Reset
Reset_style='\e[0m'       # Text Reset

# Colors
Black='\e[30m'
Red='\e[31m'
Green='\e[32m'
Yellow='\e[33m'
Blue='\e[34m'
Purple='\e[35m'
Cyan='\e[36m'
White='\e[37m'

# Bold
bold='\e[1m'

# Underline
underline='\e[4m'

# Taken from https://wiki.archlinux.org/index.php/Color_Bash_Prompt

string.trim() {
    # @desc remove leading and trailing whitespaces from a string
    # @param $1 the string to clean up
    # @result echo the clean string
    # @cred I found this trim function on stackverflow by a guy called bashfu.

    local string=$@
    string="${string#"${string%%[![:space:]]*}"}"   # remove leading whitespace characters
    string="${string%"${string##*[![:space:]]}"}"   # remove trailing whitespace characters
    printf '%s' "$string"
}

string.underline() {
	# @desc Underlines the input string and echoes it
	# @param $1 is the string to underline.
	# @result Will echo the final string
	
	local string="$1"

	echo -en "${underline}${string}${Reset_style}"
}

string.bold() {
	# @desc Bolds the input string and echoes it
	# @param $1 is the string to bold.
	# @result Will echo the final string
	local string="$1"

	echo -en "${bold}${string}${Reset_style}"
}

string.red() {
	# @desc Makes the text red and echoes it
	# @param $1 is the string
	# @result Will echo the final string

	local string="$1"
	
	echo -en "${Red}${string}${Reset_style}"
}
string.green() {
	# @desc Makes the text green and echoes it
	# @param $1 is the string
	# @result Will echo the final string

	local string="$1"
	
	echo -en "${Green}${string}${Reset_style}"
}
string.cyan() { 
	# @desc Makes the text cyan and echoes it
	# @param $1 is the string
	# @result Will echo the final string

	local string="$1"
	
	echo -en "${Cyan}${string}${Reset_style}"
}
# vi:syntax=bash
