# Reset
Reset_style='\e[0m'       # Text Reset

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Underline
underline='\e[4m'

# Taken from https://wiki.archlinux.org/index.php/Color_Bash_Prompt

string.trim() {
    # @desc remove leading and trailing whitespaces from a string
    # @param $1 the string to clean up
    # @result echo the clean string
    # @cred I found this trim function on stackverflow by a guy called bashfu.

    local string=$@
    string="${string#"${string%%[![:space:]]*}"}"   # remove leading whitespace characters
    string="${string%"${string##*[![:space:]]}"}"   # remove trailing whitespace characters
    printf '%s' "$string"
}

string.underline() {
	# @desc Underlines the input string and echoes it
	# @param $1 is the string to underline.
	# @result Will echo the final string
	
	local string="$1"

	echo -en "${underline}${string}${Reset_style}"
}

string.bold() {
	# @desc Bolds the input string and echoes it
	# @param $1 is the string to bold.
	# @result Will echo the final string
	local string="$1"

	local bold=$(tput bold)
	local unbold=$(tput sgr0)
	printf '%s' "${bold}${string}${unbold}"
}
string.red() {
	# @desc Makes the text red and echoes it
	# @param $1 is the string
	# @result Will echo the final string

	local string="$1"
	
	echo -en "${Red}${string}${Reset_style}"
}
string.green() {
	# @desc Makes the text green and echoes it
	# @param $1 is the string
	# @result Will echo the final string

	local string="$1"
	
	echo -en "${Green}${string}${Reset_style}"
}
string.cyan() { 
	# @desc Makes the text cyan and echoes it
	# @param $1 is the string
	# @result Will echo the final string

	local string="$1"
	
	echo -en "${Cyan}${string}${Reset_style}"
}
# vi:syntax=bash
